<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.powerr.blog.blog.dao.ArticleMapper">
    <resultMap id="BaseResultMap" type="cn.powerr.blog.blog.entity.Article">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="likenum" property="likenum" jdbcType="INTEGER"/>
        <result column="looknum" property="looknum" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="VARCHAR"/>
        <result column="tag_id" property="tagId" jdbcType="INTEGER"/>
        <result column="commentnum" property="commentnum" jdbcType="INTEGER"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.powerr.blog.blog.entity.ArticleWithBLOBs" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="img_url" property="imgUrl" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <!--用于查询文章带上标签-->
    <resultMap id="ResultMapWithTag" type="cn.powerr.blog.blog.entity.ArticleWithTagAndUser"
               extends="ResultMapWithBLOBs">
        <association property="tag" resultMap="cn.powerr.blog.blog.dao.TagMapper.BaseResultMap"/>
        <association property="user" resultMap="cn.powerr.blog.user.dao.UserMapper.BaseResultMap"/>
    </resultMap>
    <resultMap id="ResultMapWithUser" type="cn.powerr.blog.blog.entity.ArticleWithUser" extends="ResultMapWithBLOBs">
        <association property="user" resultMap="cn.powerr.blog.user.dao.UserMapper.BaseResultMap">
        </association>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, user_id, title, likenum, looknum, time, tag_id, commentnum, state
    </sql>
    <sql id="Blob_Column_List">
    content, img_url
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="cn.powerr.blog.blog.entity.ArticleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.powerr.blog.blog.entity.ArticleExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from article
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.powerr.blog.blog.entity.ArticleExample">
        delete from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.powerr.blog.blog.entity.ArticleWithBLOBs">
    insert into article (id, user_id, title,
      likenum, looknum, time,
      tag_id, commentnum, state,
      content, img_url)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{likenum,jdbcType=INTEGER}, #{looknum,jdbcType=INTEGER}, #{time,jdbcType=VARCHAR},
      #{tagId,jdbcType=INTEGER}, #{commentnum,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
      #{content,jdbcType=LONGVARCHAR}, #{imgUrl,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.powerr.blog.blog.entity.ArticleWithBLOBs" keyProperty="id"
            useGeneratedKeys="true">
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="likenum != null">
                likenum,
            </if>
            <if test="looknum != null">
                looknum,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="commentnum != null">
                commentnum,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="imgUrl != null">
                img_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="likenum != null">
                #{likenum,jdbcType=INTEGER},
            </if>
            <if test="looknum != null">
                #{looknum,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="commentnum != null">
                #{commentnum,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="imgUrl != null">
                #{imgUrl,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.powerr.blog.blog.entity.ArticleExample"
            resultType="java.lang.Integer">
        select count(*) from article
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="selectMainPost" resultMap="ResultMapWithUser">
    SELECT a.id,a.user_id,a.state,a.content,a.title,a.time,a.looknum,a.likenum,a.img_url,a.commentnum,u.head_img,u.nick_name,u.user_id from article AS a,user u WHERE a.user_id = u.user_id AND a.state = 1 AND a.title IS NOT NULL AND a.content IS NOT NULL ORDER BY looknum DESC,likenum DESC
  </select>
    <select id="selectMediumPost" resultMap="ResultMapWithUser">
        SELECT a.id,a.content,a.state,a.title,a.time,a.looknum,a.likenum,a.img_url,a.commentnum,u.head_img,u.user_id,u.nick_name from article AS a,user u WHERE a.user_id = u.user_id AND a.state = 1 AND a.title IS NOT NULL AND a.content IS NOT NULL ORDER BY likenum DESC
  </select>
    <select id="selectRecent" resultMap="ResultMapWithUser">
        SELECT a.id,a.content,a.state,a.title,a.time,a.looknum,a.likenum,a.img_url,a.commentnum,u.head_img,u.user_id,u.nick_name from article AS a,user u WHERE a.user_id = u.user_id AND a.state = 1 AND a.title IS NOT NULL AND a.content IS NOT NULL ORDER BY time DESC
    </select>
    <select id="selectUserRecent" resultMap="ResultMapWithTag">
SELECT
	a.id,
	a.content,
	a.state,
	a.title,
	a.time,
	a.tag_id,
	a.looknum,
	a.likenum,
	a.img_url,
	a.commentnum,
	u.head_img,
	u.user_id,
	u.nick_name,
	(SELECT tag_name FROM tag where tag.tag_id = a.tag_id) AS tag_name
FROM
	article AS a,
	USER AS u
WHERE
	a.user_id = u.user_id
AND a.user_id = #{userId}
AND a.state = 1
AND a.title IS NOT NULL
AND a.content IS NOT NULL
ORDER BY time DESC
    </select>
    <select id="selectReadHot" resultMap="ResultMapWithUser">
    SELECT a.id,a.user_id,a.content,a.state,a.title,a.likenum,a.looknum,a.time,a.tag_id,a.img_url,u.head_img,u.nick_name,u.user_id
FROM article AS a,user AS u WHERE a.user_id = u.user_id AND a.user_id =#{userId} AND a.state = 1 AND title IS NOT NULL AND content IS NOT NULL ORDER BY looknum desc LIMIT 0,10
  </select>
    <select id="selectCommentHot" resultMap="ResultMapWithUser">
    SELECT a.id,a.user_id,a.state,a.content,a.title,a.likenum,a.looknum,a.time,a.tag_id,a.img_url,a.commentnum,u.head_img,u.nick_name,u.user_id
FROM article AS  a,user AS u WHERE a.user_id = u.user_id AND a.user_id =#{userId} AND a.state = 1 AND title IS NOT NULL AND content IS NOT NULL ORDER BY commentnum desc LIMIT 0,10
  </select>
    <select id="selectLikeHot" resultMap="ResultMapWithUser">
    SELECT a.id,a.user_id,a.content,a.title,a.state,a.likenum,a.looknum,a.time,a.tag_id,a.img_url,a.commentnum,u.head_img,u.nick_name,u.user_id
FROM article AS a,user AS u WHERE a.user_id = u.user_id AND a.user_id =#{userId} AND a.state = 1 AND title IS NOT NULL AND content IS NOT NULL ORDER BY likenum desc LIMIT 0,10
  </select>
    <select id="updateArticleByLookNum">
        UPDATE article SET looknum = looknum+1 WHERE id = #{articleId}
    </select>
    <select id="selectWithTag" resultMap="ResultMapWithTag">
      SELECT a.id,
	a.content,
	a.state,
	a.title,
	a.time,
	a.tag_id,
	a.looknum,
	a.likenum,
	a.img_url,
	a.commentnum,
	(SELECT tag_name FROM tag where tag_id = a.tag_id) AS tag_name
FROM article AS a
WHERE a.id = #{articleId}
    </select>
    <select id="updateArticleTagToNull" resultType="int">
        UPDATE article SET article.tag_id=NULL WHERE article.tag_id = #{tagId} AND article.state=1
    </select>
    <select id="selectArticlesWithTag" resultMap="ResultMapWithTag">
    SELECT
	a.id,
	a.content,
	a.state,
	a.title,
	a.time,
	a.tag_id,
	a.looknum,
	a.likenum,
	a.img_url,
	a.commentnum,
	u.head_img,
	u.user_id,
	u.nick_name,
	(SELECT tag_name FROM tag where tag.tag_id = a.tag_id) AS tag_name
FROM
	article AS a,
	USER AS u
WHERE
	a.user_id = u.user_id
AND a.user_id = #{userId}
AND a.tag_id = #{tagId}
AND a.state = 1
AND a.title IS NOT NULL
AND a.content IS NOT NULL
ORDER BY time DESC
    </select>
    <select id="updateDraft" >
        UPDATE article
SET article.state=1
WHERE article.id = #{articleId}
    </select>
    <update id="updateCommentnum" >
    UPDATE article SET commentnum = commentnum + 1 WHERE id = #{articleId}
    </update>
    <update id="updateLikeNum" >
      UPDATE article SET likenum = likenum + 1 WHERE id = #{articleId}
    </update>
    <update id="updateArticleTag">
        UPDATE article
SET article.tag_id = #{tagId}
WHERE article.id = #{articleId}
    </update>
    <update id="updateByExampleSelective" parameterType="map">
        update article
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.likenum != null">
                likenum = #{record.likenum,jdbcType=INTEGER},
            </if>
            <if test="record.looknum != null">
                looknum = #{record.looknum,jdbcType=INTEGER},
            </if>
            <if test="record.time != null">
                time = #{record.time,jdbcType=VARCHAR},
            </if>
            <if test="record.tagId != null">
                tag_id = #{record.tagId,jdbcType=INTEGER},
            </if>
            <if test="record.commentnum != null">
                commentnum = #{record.commentnum,jdbcType=INTEGER},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
            <if test="record.imgUrl != null">
                img_url = #{record.imgUrl,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update article
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        likenum = #{record.likenum,jdbcType=INTEGER},
        looknum = #{record.looknum,jdbcType=INTEGER},
        time = #{record.time,jdbcType=VARCHAR},
        tag_id = #{record.tagId,jdbcType=INTEGER},
        commentnum = #{record.commentnum,jdbcType=INTEGER},
        state = #{record.state,jdbcType=INTEGER},
        content = #{record.content,jdbcType=LONGVARCHAR},
        img_url = #{record.imgUrl,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update article
        set id = #{record.id,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        likenum = #{record.likenum,jdbcType=INTEGER},
        looknum = #{record.looknum,jdbcType=INTEGER},
        time = #{record.time,jdbcType=VARCHAR},
        tag_id = #{record.tagId,jdbcType=INTEGER},
        commentnum = #{record.commentnum,jdbcType=INTEGER},
        state = #{record.state,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.powerr.blog.blog.entity.ArticleWithBLOBs">
        update article
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="likenum != null">
                likenum = #{likenum,jdbcType=INTEGER},
            </if>
            <if test="looknum != null">
                looknum = #{looknum,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=VARCHAR},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=INTEGER},
            </if>
            <if test="commentnum != null">
                commentnum = #{commentnum,jdbcType=INTEGER},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
            <if test="imgUrl != null">
                img_url = #{imgUrl,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.powerr.blog.blog.entity.ArticleWithBLOBs">
        update article
        set user_id = #{userId,jdbcType=INTEGER},
        title = #{title,jdbcType=VARCHAR},
        likenum = #{likenum,jdbcType=INTEGER},
        looknum = #{looknum,jdbcType=INTEGER},
        time = #{time,jdbcType=VARCHAR},
        tag_id = #{tagId,jdbcType=INTEGER},
        commentnum = #{commentnum,jdbcType=INTEGER},
        state = #{state,jdbcType=INTEGER},
        content = #{content,jdbcType=LONGVARCHAR},
        img_url = #{imgUrl,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.powerr.blog.blog.entity.Article">
    update article
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      likenum = #{likenum,jdbcType=INTEGER},
      looknum = #{looknum,jdbcType=INTEGER},
      time = #{time,jdbcType=VARCHAR},
      tag_id = #{tagId,jdbcType=INTEGER},
      commentnum = #{commentnum,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>